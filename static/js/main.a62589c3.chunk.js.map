{"version":3,"sources":["Form.js","App.js","index.js"],"names":["MyTextInput","_ref","label","props","_objectWithoutProperties","_useField","useField","_useField2","_slicedToArray","field","meta","_jsxs","_Fragment","children","_jsx","htmlFor","name","_objectSpread","touched","error","className","MyCheckbox","_ref2","_useField3","type","_useField4","CustomForm","Formik","initialValues","email","amount","currency","text","terms","validationSchema","Yup","min","required","oneOf","onSubmit","values","console","log","JSON","stringify","Form","id","Field","ErrorMessage","component","as","value","App","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a62589c3.chunk.js","sourcesContent":["import { Formik, Field, Form, ErrorMessage, useField } from \"formik\";\nimport * as Yup from \"yup\";\n\nconst MyTextInput = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n  return (\n    <>\n      <label htmlFor={props.name}>{label}</label>\n      <input {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <div className=\"error\">{meta.error}</div>\n      ) : null}\n    </>\n  );\n};\n\nconst MyCheckbox = ({ children, ...props }) => {\n  const [field, meta] = useField({ ...props, type: \"checkbox\" });\n  return (\n    <>\n      <label className=\"checkbox\">\n        <input type=\"checkbox\" {...field} {...props} />\n        {children}\n      </label>\n      {meta.touched && meta.error ? (\n        <div className=\"error\">{meta.error}</div>\n      ) : null}\n    </>\n  );\n};\n\nconst CustomForm = () => {\n  return (\n    <Formik\n      initialValues={{\n        name: \"\",\n        email: \"\",\n        amount: 0,\n        currency: \"\",\n        text: \"\",\n        terms: false,\n      }}\n      validationSchema={Yup.object({\n        name: Yup.string()\n          .min(2, \"Minimum 2 characters to fill\")\n          .required(\"Obligatory field!\"),\n        email: Yup.string()\n          .email(\"Wrong email address\")\n          .required(\"Obligatory field!\"),\n        amount: Yup.number()\n          .min(5, \"Minimum 5 characters to fill\")\n          .required(\"Obligatory field!\"),\n        currency: Yup.string().required(\"Obligatory field!\"),\n        text: Yup.string().min(10, \"Minimum 10 characters to fill\"),\n        terms: Yup.boolean()\n          .required(\"Obligatory field!\")\n          .oneOf([true], \"Obligatory field!\"),\n      })}\n      onSubmit={(values) => console.log(JSON.stringify(values, null, 2))}\n    >\n      <Form className=\"form\">\n        <h2>Send a donation</h2>\n        <MyTextInput label=\"Your name\" id=\"name\" name=\"name\" type=\"text\" />\n\n        <MyTextInput label=\"Your mail\" id=\"email\" name=\"email\" type=\"email\" />\n\n        <label htmlFor=\"amount\">Quantity</label>\n        <Field id=\"amount\" name=\"amount\" type=\"number\" />\n        <ErrorMessage className=\"error\" name=\"amount\" component=\"div\" />\n\n        <label htmlFor=\"currency\">Currency</label>\n        <Field id=\"currency\" name=\"currency\" as=\"select\">\n          <option value=\"\">Select currency</option>\n          <option value=\"USD\">USD</option>\n          <option value=\"UAH\">UAH</option>\n          <option value=\"RUB\">EUR</option>\n        </Field>\n        <ErrorMessage className=\"error\" name=\"currency\" component=\"div\" />\n\n        <label htmlFor=\"text\">Your message</label>\n        <Field id=\"text\" name=\"text\" as=\"textarea\" />\n        <ErrorMessage className=\"error\" name=\"text\" component=\"div\" />\n\n        <MyCheckbox name=\"terms\">\n          Do you agree with the privacy policy?\n        </MyCheckbox>\n\n        <button type=\"submit\">Send</button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default CustomForm;\n","import \"./app.scss\";\nimport CustomForm from \"./Form\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <CustomForm />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}