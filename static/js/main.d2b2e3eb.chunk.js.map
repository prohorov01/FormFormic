{"version":3,"sources":["Form.js","App.js","index.js"],"names":["Form","formik","useFormik","initialValues","name","email","amount","currency","text","terms","validationSchema","Yup","min","required","oneOf","onSubmit","values","console","log","JSON","stringify","_jsxs","className","handleSubmit","children","_jsx","htmlFor","id","type","value","onChange","handleChange","onBlur","handleBlur","errors","touched","v","emailf","App","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d2b2e3eb.chunk.js","sourcesContent":["import { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\n\n// const validate = (values) => {\n//   const errors = {};\n\n//   if (!values.name) {\n//     errors.name = \"Obligatory field!\";\n//   } else if (values.name.length < 2) {\n//     errors.name = \"Minimum 2 characters to fill\";\n//   }\n//   if (!values.email) {\n//     errors.email = \"Obligatory field!\";\n//   } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n//     errors.email = \"Wrong email address\";\n//   }\n//   return errors;\n// };\n\nconst Form = () => {\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      email: \"\",\n      amount: 0,\n      currency: \"\",\n      text: \"\",\n      terms: false,\n    },\n    validationSchema: Yup.object({\n      name: Yup.string()\n        .min(2, \"Minimum 2 characters to fill\")\n        .required(\"Obligatory field!\"),\n      email: Yup.string()\n        .email(\"Wrong email address\")\n        .required(\"Obligatory field!\"),\n      amount: Yup.number()\n        .min(5, \"Minimum 5 characters to fill\")\n        .required(\"Obligatory field!\"),\n      currency: Yup.string().required(\"Obligatory field!\"),\n      text: Yup.string().min(10, \"Minimum 10 characters to fill\"),\n      terms: Yup.boolean()\n        .required(\"Obligatory field!\")\n        .oneOf([true], \"Obligatory field!\"),\n    }),\n    onSubmit: (values) => console.log(JSON.stringify(values, null, 2)),\n  });\n\n  return (\n    <form className=\"form\" onSubmit={formik.handleSubmit}>\n      <h2>Send a donation</h2>\n      <label htmlFor=\"name\">Your name</label>\n      <input\n        id=\"name\"\n        name=\"name\"\n        type=\"text\"\n        value={formik.values.name}\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n      />\n      {formik.errors.name && formik.touched.name ? (\n        <di className=\"error\" v>\n          {formik.errors.name}\n        </di>\n      ) : null}\n      <label htmlFor=\"email\">Your mail</label>\n      <input\n        id=\"email\"\n        name=\"email\"\n        type=\"email\"\n        value={formik.values.email}\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n      />\n      {formik.errors.email && formik.touched.emailf ? (\n        <di className=\"error\" v>\n          {formik.errors.email}\n        </di>\n      ) : null}\n\n      <label htmlFor=\"amount\">Quantity</label>\n      <input\n        id=\"amount\"\n        name=\"amount\"\n        type=\"number\"\n        value={formik.values.amount}\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n      />\n      {formik.errors.amount && formik.touched.amount ? (\n        <di className=\"error\" v>\n          {formik.errors.amount}\n        </di>\n      ) : null}\n      <label htmlFor=\"currency\">Currency</label>\n      <select\n        id=\"currency\"\n        name=\"currency\"\n        value={formik.values.currency}\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n      >\n        <option value=\"\">Select currency</option>\n        <option value=\"USD\">USD</option>\n        <option value=\"UAH\">UAH</option>\n        <option value=\"RUB\">EUR</option>\n      </select>\n      {formik.errors.currency && formik.touched.currency ? (\n        <di className=\"error\" v>\n          {formik.errors.currency}\n        </di>\n      ) : null}\n      <label htmlFor=\"text\">Your message</label>\n      <textarea\n        id=\"text\"\n        name=\"text\"\n        value={formik.values.text}\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n      />\n      {formik.errors.text && formik.touched.text ? (\n        <div className=\"error\">{formik.errors.text}</div>\n      ) : null}\n      <label className=\"checkbox\">\n        <input\n          name=\"terms\"\n          type=\"checkbox\"\n          value={formik.values.terms}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n        />\n        Do you agree with the privacy policy?\n      </label>\n      {formik.errors.terms && formik.touched.terms ? (\n        <di className=\"error\" v>\n          {formik.errors.terms}\n        </di>\n      ) : null}\n      <button type=\"submit\">Send</button>\n    </form>\n  );\n};\n\nexport default Form;\n","import './app.scss';\nimport Form from './Form';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n        <Form/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}