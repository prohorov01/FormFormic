{"version":3,"sources":["Form.js","App.js","index.js"],"names":["CustomForm","_jsx","Formik","initialValues","name","email","amount","currency","text","terms","validationSchema","Yup","min","required","oneOf","onSubmit","values","console","log","JSON","stringify","children","_jsxs","Form","className","htmlFor","Field","id","type","ErrorMessage","component","as","value","App","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"2LAuEeA,EApEI,WACjB,OACEC,cAACC,IAAM,CACLC,cAAe,CACbC,KAAM,GACNC,MAAO,GACPC,OAAQ,EACRC,SAAU,GACVC,KAAM,GACNC,OAAO,GAETC,iBAAkBC,IAAW,CAC3BP,KAAMO,MACHC,IAAI,EAAG,gCACPC,SAAS,qBACZR,MAAOM,MACJN,MAAM,uBACNQ,SAAS,qBACZP,OAAQK,MACLC,IAAI,EAAG,gCACPC,SAAS,qBACZN,SAAUI,MAAaE,SAAS,qBAChCL,KAAMG,MAAaC,IAAI,GAAI,iCAC3BH,MAAOE,MACJE,SAAS,qBACTC,MAAM,EAAC,GAAO,uBAEnBC,SAAU,SAACC,GAAM,OAAKC,QAAQC,IAAIC,KAAKC,UAAUJ,EAAQ,KAAM,KAAIK,SAEnEC,eAACC,IAAI,CAACC,UAAU,OAAMH,SAAA,CACpBpB,cAAA,MAAAoB,SAAI,oBACJpB,cAAA,SAAOwB,QAAQ,OAAMJ,SAAC,cACtBpB,cAACyB,IAAK,CAACC,GAAG,OAAOvB,KAAK,OAAOwB,KAAK,SAClC3B,cAAC4B,IAAY,CAACL,UAAU,QAAQpB,KAAK,OAAO0B,UAAU,QAEtD7B,cAAA,SAAOwB,QAAQ,QAAOJ,SAAC,cACvBpB,cAACyB,IAAK,CAACC,GAAG,QAAQvB,KAAK,QAAQwB,KAAK,UACpC3B,cAAC4B,IAAY,CAACL,UAAU,QAAQpB,KAAK,QAAQ0B,UAAU,QAEvD7B,cAAA,SAAOwB,QAAQ,SAAQJ,SAAC,aACxBpB,cAACyB,IAAK,CAACC,GAAG,SAASvB,KAAK,SAASwB,KAAK,WACtC3B,cAAC4B,IAAY,CAACL,UAAU,QAAQpB,KAAK,SAAS0B,UAAU,QAExD7B,cAAA,SAAOwB,QAAQ,WAAUJ,SAAC,aAC1BC,eAACI,IAAK,CAACC,GAAG,WAAWvB,KAAK,WAAW2B,GAAG,SAAQV,SAAA,CAC9CpB,cAAA,UAAQ+B,MAAM,GAAEX,SAAC,oBACjBpB,cAAA,UAAQ+B,MAAM,MAAKX,SAAC,QACpBpB,cAAA,UAAQ+B,MAAM,MAAKX,SAAC,QACpBpB,cAAA,UAAQ+B,MAAM,MAAKX,SAAC,WAEtBpB,cAAC4B,IAAY,CAACL,UAAU,QAAQpB,KAAK,WAAW0B,UAAU,QAE1D7B,cAAA,SAAOwB,QAAQ,OAAMJ,SAAC,iBACtBpB,cAACyB,IAAK,CAACC,GAAG,OAAOvB,KAAK,OAAO2B,GAAG,aAChC9B,cAAC4B,IAAY,CAACL,UAAU,QAAQpB,KAAK,OAAO0B,UAAU,QAEtDR,eAAA,SAAOE,UAAU,WAAUH,SAAA,CACzBpB,cAACyB,IAAK,CAACtB,KAAK,QAAQwB,KAAK,aAAa,2CAGxC3B,cAAC4B,IAAY,CAACL,UAAU,QAAQpB,KAAK,QAAQ0B,UAAU,QAEvD7B,cAAA,UAAQ2B,KAAK,SAAQP,SAAC,eCtDfY,MARf,WACE,OACEhC,cAAA,OAAKuB,UAAU,MAAKH,SAClBpB,cAACD,EAAU,OCFjBkC,IAASC,OACPlC,cAACmC,IAAMC,WAAU,CAAAhB,SACfpB,cAACgC,EAAG,MAENK,SAASC,eAAe,W","file":"static/js/main.479494a6.chunk.js","sourcesContent":["import { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\n\nconst CustomForm = () => {\n  return (\n    <Formik\n      initialValues={{\n        name: \"\",\n        email: \"\",\n        amount: 0,\n        currency: \"\",\n        text: \"\",\n        terms: false,\n      }}\n      validationSchema={Yup.object({\n        name: Yup.string()\n          .min(2, \"Minimum 2 characters to fill\")\n          .required(\"Obligatory field!\"),\n        email: Yup.string()\n          .email(\"Wrong email address\")\n          .required(\"Obligatory field!\"),\n        amount: Yup.number()\n          .min(5, \"Minimum 5 characters to fill\")\n          .required(\"Obligatory field!\"),\n        currency: Yup.string().required(\"Obligatory field!\"),\n        text: Yup.string().min(10, \"Minimum 10 characters to fill\"),\n        terms: Yup.boolean()\n          .required(\"Obligatory field!\")\n          .oneOf([true], \"Obligatory field!\"),\n      })}\n      onSubmit={(values) => console.log(JSON.stringify(values, null, 2))}\n    >\n      <Form className=\"form\">\n        <h2>Send a donation</h2>\n        <label htmlFor=\"name\">Your name</label>\n        <Field id=\"name\" name=\"name\" type=\"text\" />\n        <ErrorMessage className=\"error\" name=\"name\" component=\"div\" />\n\n        <label htmlFor=\"email\">Your mail</label>\n        <Field id=\"email\" name=\"email\" type=\"email\" />\n        <ErrorMessage className=\"error\" name=\"email\" component=\"div\" />\n\n        <label htmlFor=\"amount\">Quantity</label>\n        <Field id=\"amount\" name=\"amount\" type=\"number\" />\n        <ErrorMessage className=\"error\" name=\"amount\" component=\"div\" />\n\n        <label htmlFor=\"currency\">Currency</label>\n        <Field id=\"currency\" name=\"currency\" as=\"select\">\n          <option value=\"\">Select currency</option>\n          <option value=\"USD\">USD</option>\n          <option value=\"UAH\">UAH</option>\n          <option value=\"RUB\">EUR</option>\n        </Field>\n        <ErrorMessage className=\"error\" name=\"currency\" component=\"div\" />\n\n        <label htmlFor=\"text\">Your message</label>\n        <Field id=\"text\" name=\"text\" as=\"textarea\" />\n        <ErrorMessage className=\"error\" name=\"text\" component=\"div\" />\n\n        <label className=\"checkbox\">\n          <Field name=\"terms\" type=\"checkbox\" />\n          Do you agree with the privacy policy?\n        </label>\n        <ErrorMessage className=\"error\" name=\"terms\" component=\"div\" />\n\n        <button type=\"submit\">Send</button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default CustomForm;\n","import \"./app.scss\";\nimport CustomForm from \"./Form\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <CustomForm />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}